2018-12-17  Zach Escalante  zach.escalante@gmail.com

    * currency.py (dollar): substitute all dollar values ($123,456.78) for the token <dollar>

    * currency.py (pound): substitute all dollar values (£123,456.78) for the token <pound>

    * currency.py (yen): substitute all dollar values (¥123,456.78) for the token <yen>

    * currency.py (euro): substitute all dollar values (€123,456.78) for the token <euro>

    * test/__init__.py: I created the "test" folder for test code and data

    * test_code.py (unrelated_change): I tested all the functions above in the test_code.py file


2018-12-18  Zach Escalante  zach.escalante@gmail.com

    * currency.py: changed regex to be more robust for all currency functions <dollar>

    * date.py: created robust date subsitution functionality ('us_day', 'us_year', 'us_month', 'us_date')

    * date.py (class): changed class name from 'NLPFormatting' to 'DateToken'

    * setup.py (version): updated version to 0.1.1

2018-12-19  Zach Escalante  zach.escalante@gmail.com

    * numbers.py: any numbers surrounded by periods or commas are replaced by the <number> token

    * tokenize.py: one file (tokenize()) that calls 'date.py', 'currency.py' and 'numbers.py' to tokenize an entire sentence

    * setup.py (version): updated version to 0.1.2



